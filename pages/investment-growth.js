import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Investment.module.css";
import { useState } from "react";
import "../node_modules/react-vis/dist/style.css";
import {
  XYPlot,
  LineSeries,
  VerticalGridLines,
  HorizontalGridLines,
  XAxis,
  YAxis,
  Crosshair,
} from "react-vis";

const state = {
  pot: 13000,
  contribution: 500,
  growth: 5,
  graphData: [{ x: 0, y: 0 }],
};

function formatNumber(number) {
    return number.toFixed(2) // todo: legibility commas
}

export default function InvestmentGrowth() {
  const [pot, setPot] = useState(state.pot);
  const [contribution, setContribution] = useState(state.contribution);
  const [growth, setGrowth] = useState(state.growth);
  const [years, setYears] = useState(50);
  const [crosshairValues, setCrosshairValues] = useState([]);
  //   const [graphData, setGraphData] = useState(state.graphData)

  function updateContribution(event) {
    updateIfValidNumber(event, setContribution);
  }

  function updatePot(event) {
    updateIfValidNumber(event, setPot);
  }

  function updateGrowth(event) {
    updateIfValidNumber(event, setGrowth);
  }

  function updateYears(event) {
    updateIfValidNumber(event, setYears);
  }

  function getGraphData() {
    const data = [];
    let tally = pot;
    for (let i = 0; i < years; i++) {
      // fix to grow monthly https://www.asimplemodel.com/reference/117/converting-an-annual-growth-rate-to-a-monthly-growth-rate/
      tally = (tally + 12 * contribution) * (1 + growth / 100);
      data.push({ y: tally, x: 2021 + i });
    }

    return data;
  }

  function updateIfValidNumber(event, updateFn) {
    const val = event.target.value;
    if (val !== undefined && val !== "") {
      console.log("UPDATING to ", Number(val));
      updateFn(Number(val));
    } else {
      console.log("NOT UPDATING");
    }
  }
  const graphData = getGraphData();
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div className={styles.grid}>
          <XYPlot
            height={300}
            width={600}
            margin={{ left: 100, right: 50 }}
            onMouseLeave={() => setCrosshairValues([])}
          >
            <LineSeries
              data={graphData}
              onNearestX={(value, { index }) => {
                setCrosshairValues([value]);
              }}
            />
            <XAxis tickFormat={(val) => val} />
            <YAxis tickFormat={(val) => "£" + val} />
            <VerticalGridLines />
            <HorizontalGridLines />
            <Crosshair
              values={crosshairValues}
              titleFormat={(items) => ({
                title: items[0].x,
                value: "£" + formatNumber(items[0].y),
              })}
              itemsFormat={(items) => []}
            />
          </XYPlot>
        </div>
        <div className={styles.grid}>
          <form className={styles.inputs}>
            <div className={styles.inputWrapper}>
              <label>Starting value</label>
              <input type="number" value={pot} onChange={updatePot}></input>
            </div>
            <div className={styles.inputWrapper}>
              <label>Monthly Contribution</label>
              <input
                type="number"
                value={contribution}
                onChange={updateContribution}
              ></input>
            </div>
            <div className={styles.inputWrapper}>
              <label>Annual Growth %</label>
              <input
                type="number"
                value={growth}
                onChange={updateGrowth}
              ></input>
            </div>
            <div className={styles.inputWrapper}>
              <label>Years</label>
              <input type="number" value={years} onChange={updateYears}></input>
            </div>
          </form>
          <div className={styles.graph}></div>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}
